(()=>{"use strict";var __webpack_modules__={235:()=>{eval('\n;// CONCATENATED MODULE: ./src/scripts/Card.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Card = /*#__PURE__*/function () {\n  function Card(cardsData, templateSelector, handleCardClick, handleDeleteCard, userId) {\n    _classCallCheck(this, Card);\n    this._cardsData = cardsData;\n    this._templateSelector = templateSelector;\n    this._handleCardClick = handleCardClick;\n    this._handleDeleteCard = handleDeleteCard;\n    this._ownerId = cardsData.owner._id;\n    this._userId = userId;\n  }\n  _createClass(Card, [{\n    key: "_getTemplate",\n    value: function _getTemplate() {\n      var cardTemplate = document.querySelector(this._templateSelector).content.querySelector(\'.element__group\').cloneNode(true);\n      return cardTemplate;\n    }\n  }, {\n    key: "deleteCard",\n    value: function deleteCard() {\n      this._element.remove();\n      this._element.null;\n\n      //  console.log(\'Здесь будет вызываться попап\');\n      //  if (this._popupSure) {\n      //    this._popupSure.open();\n      //    this._popupSure.setSubmitSure(() => {\n      //      deleteCard(this._cardsData._id);\n      //    });\n      //  }\n    }\n  }, {\n    key: "_handleLikeCard",\n    value: function _handleLikeCard() {\n      this._likeButton.classList.toggle(\'element__heart_active\');\n    }\n  }, {\n    key: "_handleImageClick",\n    value: function _handleImageClick() {\n      if (typeof this._handleCardClick === \'function\') {\n        this._openPicture();\n      }\n    }\n  }, {\n    key: "_openPicture",\n    value: function _openPicture() {\n      this._handleCardClick(this._cardsData);\n    }\n  }, {\n    key: "getId",\n    value: function getId() {\n      return this._cardsData._id;\n    }\n  }, {\n    key: "generateCard",\n    value: function generateCard() {\n      var _this = this;\n      this._element = this._getTemplate();\n      this._cardImage = this._element.querySelector(\'.element__image\');\n      this._element.querySelector(\'.element__title-text\').textContent = this._cardsData.name;\n      this._imageElement = this._element.querySelector(\'.element__image\');\n      this._imageElement.src = this._cardsData.link;\n      this._imageElement.alt = this._cardsData.name;\n      this._likeButton = this._element.querySelector(\'.element__heart\');\n      this._trashButton = this._element.querySelector(\'.element__trash\');\n      if (this._ownerId !== this._userId) {\n        this._trashButton.remove();\n      }\n      this._likeButton.addEventListener(\'click\', this._handleLikeCard.bind(this));\n      this._trashButton.addEventListener(\'click\', function () {\n        return _this._handleDeleteCard(_this);\n      });\n      this._cardImage.addEventListener(\'click\', this._handleImageClick.bind(this));\n      return this._element;\n    }\n  }]);\n  return Card;\n}();\n;// CONCATENATED MODULE: ./src/scripts/FormValidator.js\nfunction FormValidator_typeof(obj) { "@babel/helpers - typeof"; return FormValidator_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, FormValidator_typeof(obj); }\nfunction FormValidator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction FormValidator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, FormValidator_toPropertyKey(descriptor.key), descriptor); } }\nfunction FormValidator_createClass(Constructor, protoProps, staticProps) { if (protoProps) FormValidator_defineProperties(Constructor.prototype, protoProps); if (staticProps) FormValidator_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction FormValidator_toPropertyKey(arg) { var key = FormValidator_toPrimitive(arg, "string"); return FormValidator_typeof(key) === "symbol" ? key : String(key); }\nfunction FormValidator_toPrimitive(input, hint) { if (FormValidator_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (FormValidator_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar FormValidator = /*#__PURE__*/function () {\n  function FormValidator(enableConfig, formElement) {\n    FormValidator_classCallCheck(this, FormValidator);\n    this._enableConfig = enableConfig;\n    this._formElement = formElement;\n    this._inputList = Array.from(formElement.querySelectorAll(enableConfig.inputSelector));\n    this._buttonElement = formElement.querySelector(enableConfig.submitButtonSelector);\n  }\n  FormValidator_createClass(FormValidator, [{\n    key: "_defineInputError",\n    value: function _defineInputError(inputElement) {\n      return this._formElement.querySelector(".".concat(inputElement.name, "-invalid"));\n    }\n  }, {\n    key: "_showInputError",\n    value: function _showInputError(inputElement, errorMessage) {\n      var errorElement = this._defineInputError(inputElement);\n      inputElement.classList.add(this._enableConfig.inputErrorClass);\n      errorElement.textContent = errorMessage;\n    }\n  }, {\n    key: "_hideInputError",\n    value: function _hideInputError(inputElement) {\n      var errorElement = this._defineInputError(inputElement);\n      inputElement.classList.remove(this._enableConfig.inputErrorClass);\n      errorElement.textContent = \'\';\n    }\n  }, {\n    key: "_checkInputValidity",\n    value: function _checkInputValidity(inputElement) {\n      if (inputElement.validity.valid) {\n        this._hideInputError(inputElement);\n      } else {\n        this._showInputError(inputElement, inputElement.validationMessage);\n      }\n    }\n  }, {\n    key: "_hasInvalidInput",\n    value: function _hasInvalidInput() {\n      return this._inputList.some(function (inputElement) {\n        return !inputElement.validity.valid;\n      });\n    }\n  }, {\n    key: "toggleButtonState",\n    value: function toggleButtonState() {\n      if (this._hasInvalidInput()) {\n        this._buttonElement.classList.add(this._enableConfig.inactiveButtonClass);\n        this._buttonElement.setAttribute(\'disabled\', \'\');\n      } else {\n        this._buttonElement.classList.remove(this._enableConfig.inactiveButtonClass);\n        this._buttonElement.removeAttribute(\'disabled\');\n      }\n    }\n  }, {\n    key: "_setEventListeners",\n    value: function _setEventListeners() {\n      var _this = this;\n      this._inputList.forEach(function (inputElement) {\n        inputElement.addEventListener(\'input\', function () {\n          _this._checkInputValidity(inputElement);\n          _this.toggleButtonState();\n        });\n        _this.toggleButtonState();\n      });\n    }\n  }, {\n    key: "enableValidation",\n    value: function enableValidation() {\n      this._formElement.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n      });\n      this._setEventListeners();\n      this.toggleButtonState();\n    }\n  }]);\n  return FormValidator;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/Section.js\nfunction Section_typeof(obj) { "@babel/helpers - typeof"; return Section_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Section_typeof(obj); }\nfunction Section_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Section_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Section_toPropertyKey(descriptor.key), descriptor); } }\nfunction Section_createClass(Constructor, protoProps, staticProps) { if (protoProps) Section_defineProperties(Constructor.prototype, protoProps); if (staticProps) Section_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Section_toPropertyKey(arg) { var key = Section_toPrimitive(arg, "string"); return Section_typeof(key) === "symbol" ? key : String(key); }\nfunction Section_toPrimitive(input, hint) { if (Section_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Section_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Section = /*#__PURE__*/function () {\n  function Section(_ref, containerSelector, popup) {\n    var items = _ref.items,\n      renderer = _ref.renderer;\n    Section_classCallCheck(this, Section);\n    this._items = items;\n    this._renderer = renderer;\n    this._container = document.querySelector(containerSelector);\n  }\n  Section_createClass(Section, [{\n    key: "renderItems",\n    value: function renderItems(items) {\n      var _this = this;\n      items.forEach(function (item) {\n        _this._renderer(item);\n      });\n    }\n  }, {\n    key: "addItem",\n    value: function addItem(element) {\n      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'append\';\n      switch (position) {\n        case \'append\':\n          this._container.append(element);\n          return;\n        case \'prepend\':\n          this._container.prepend(element);\n          return;\n        default:\n          break;\n      }\n    }\n  }]);\n  return Section;\n}();\n;// CONCATENATED MODULE: ./src/scripts/Popup.js\nfunction Popup_typeof(obj) { "@babel/helpers - typeof"; return Popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Popup_typeof(obj); }\nfunction Popup_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Popup_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Popup_toPropertyKey(descriptor.key), descriptor); } }\nfunction Popup_createClass(Constructor, protoProps, staticProps) { if (protoProps) Popup_defineProperties(Constructor.prototype, protoProps); if (staticProps) Popup_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Popup_toPropertyKey(arg) { var key = Popup_toPrimitive(arg, "string"); return Popup_typeof(key) === "symbol" ? key : String(key); }\nfunction Popup_toPrimitive(input, hint) { if (Popup_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Popup_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Popup = /*#__PURE__*/function () {\n  function Popup(popupSelector) {\n    Popup_classCallCheck(this, Popup);\n    this._popup = document.querySelector(popupSelector);\n    this._handleEscClose = this._handleEscClose.bind(this);\n  }\n  Popup_createClass(Popup, [{\n    key: "open",\n    value: function open() {\n      this._popup.classList.add(\'popup_opened\');\n      document.addEventListener(\'keydown\', this._handleEscClose);\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      this._popup.classList.remove(\'popup_opened\');\n      document.removeEventListener(\'keydown\', this._handleEscClose);\n    }\n  }, {\n    key: "_handleEscClose",\n    value: function _handleEscClose(evt) {\n      if (evt.key === \'Escape\') {\n        this.close();\n      }\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this = this;\n      this._popup.addEventListener(\'mousedown\', function (evt) {\n        if (evt.target === _this._popup) {\n          _this.close();\n        }\n      });\n      var closeButton = this._popup.querySelector(\'.popup__close\');\n      closeButton.addEventListener(\'click\', function () {\n        _this.close();\n      });\n    }\n  }]);\n  return Popup;\n}();\n\n;// CONCATENATED MODULE: ./src/scripts/PopupWithImage.js\nfunction PopupWithImage_typeof(obj) { "@babel/helpers - typeof"; return PopupWithImage_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithImage_typeof(obj); }\nfunction PopupWithImage_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithImage_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithImage_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithImage_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithImage_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithImage_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithImage_toPropertyKey(arg) { var key = PopupWithImage_toPrimitive(arg, "string"); return PopupWithImage_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithImage_toPrimitive(input, hint) { if (PopupWithImage_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithImage_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (PopupWithImage_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar PopupWithImage = /*#__PURE__*/function (_Popup) {\n  _inherits(PopupWithImage, _Popup);\n  var _super = _createSuper(PopupWithImage);\n  function PopupWithImage(popupSelector) {\n    var _this;\n    PopupWithImage_classCallCheck(this, PopupWithImage);\n    _this = _super.call(this, popupSelector);\n    _this._popupImage = _this._popup.querySelector(\'.popup__card\');\n    _this._popupCaption = _this._popup.querySelector(\'.popup__title\');\n    return _this;\n  }\n  PopupWithImage_createClass(PopupWithImage, [{\n    key: "open",\n    value: function open(imageSrc, imageCaption) {\n      this._popupImage.src = imageSrc;\n      this._popupImage.alt = imageCaption;\n      this._popupCaption.textContent = imageCaption;\n      _get(_getPrototypeOf(PopupWithImage.prototype), "open", this).call(this);\n    }\n  }]);\n  return PopupWithImage;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/scripts/PopupWithForm.js\nfunction PopupWithForm_typeof(obj) { "@babel/helpers - typeof"; return PopupWithForm_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupWithForm_typeof(obj); }\nfunction PopupWithForm_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupWithForm_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupWithForm_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupWithForm_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupWithForm_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupWithForm_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupWithForm_toPropertyKey(arg) { var key = PopupWithForm_toPrimitive(arg, "string"); return PopupWithForm_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupWithForm_toPrimitive(input, hint) { if (PopupWithForm_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupWithForm_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupWithForm_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupWithForm_get = Reflect.get.bind(); } else { PopupWithForm_get = function _get(target, property, receiver) { var base = PopupWithForm_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupWithForm_get.apply(this, arguments); }\nfunction PopupWithForm_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupWithForm_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupWithForm_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupWithForm_setPrototypeOf(subClass, superClass); }\nfunction PopupWithForm_setPrototypeOf(o, p) { PopupWithForm_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupWithForm_setPrototypeOf(o, p); }\nfunction PopupWithForm_createSuper(Derived) { var hasNativeReflectConstruct = PopupWithForm_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupWithForm_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupWithForm_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupWithForm_possibleConstructorReturn(this, result); }; }\nfunction PopupWithForm_possibleConstructorReturn(self, call) { if (call && (PopupWithForm_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupWithForm_assertThisInitialized(self); }\nfunction PopupWithForm_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupWithForm_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupWithForm_getPrototypeOf(o) { PopupWithForm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupWithForm_getPrototypeOf(o); }\n\nvar PopupWithForm = /*#__PURE__*/function (_Popup) {\n  PopupWithForm_inherits(PopupWithForm, _Popup);\n  var _super = PopupWithForm_createSuper(PopupWithForm);\n  function PopupWithForm(popupSelector, submitCallback) {\n    var _this;\n    PopupWithForm_classCallCheck(this, PopupWithForm);\n    _this = _super.call(this, popupSelector);\n    _this._submitCallback = submitCallback;\n    _this._form = _this._popup.querySelector(\'.popup__form\');\n    return _this;\n  }\n  PopupWithForm_createClass(PopupWithForm, [{\n    key: "setSubmitCallback",\n    value: function setSubmitCallback(submitCallback) {\n      this._submitCallback = submitCallback;\n    }\n  }, {\n    key: "_getInputValues",\n    value: function _getInputValues() {\n      var inputList = this._form.querySelectorAll(\'.popup__field\');\n      var formValues = {};\n      inputList.forEach(function (input) {\n        formValues[input.name] = input.value;\n      });\n      return formValues;\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "setEventListeners", this).call(this);\n      this._form.addEventListener(\'submit\', function (evt) {\n        evt.preventDefault();\n        if (_this2._submitCallback) {\n          _this2._submitCallback(_this2._getInputValues());\n        }\n        ;\n      });\n    }\n  }, {\n    key: "close",\n    value: function close() {\n      PopupWithForm_get(PopupWithForm_getPrototypeOf(PopupWithForm.prototype), "close", this).call(this);\n      this._form.reset();\n    }\n  }]);\n  return PopupWithForm;\n}(Popup);\n\n;// CONCATENATED MODULE: ./src/scripts/UserInfo.js\nfunction UserInfo_typeof(obj) { "@babel/helpers - typeof"; return UserInfo_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, UserInfo_typeof(obj); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == UserInfo_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction UserInfo_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction UserInfo_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, UserInfo_toPropertyKey(descriptor.key), descriptor); } }\nfunction UserInfo_createClass(Constructor, protoProps, staticProps) { if (protoProps) UserInfo_defineProperties(Constructor.prototype, protoProps); if (staticProps) UserInfo_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction UserInfo_toPropertyKey(arg) { var key = UserInfo_toPrimitive(arg, "string"); return UserInfo_typeof(key) === "symbol" ? key : String(key); }\nfunction UserInfo_toPrimitive(input, hint) { if (UserInfo_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (UserInfo_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar UserInfo = /*#__PURE__*/function () {\n  function UserInfo(_ref) {\n    var nameSelector = _ref.nameSelector,\n      aboutSelector = _ref.aboutSelector;\n    UserInfo_classCallCheck(this, UserInfo);\n    this._nameElement = document.querySelector(nameSelector);\n    this._aboutElement = document.querySelector(aboutSelector);\n  }\n  UserInfo_createClass(UserInfo, [{\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return {\n        name: this._nameElement.textContent,\n        about: this._aboutElement.textContent\n      };\n    }\n  }, {\n    key: "fetchUserData",\n    value: function () {\n      var _fetchUserData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var cohortId, url, response, userData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              cohortId = \'cohort-73\';\n              url = "https://mesto.nomoreparties.co/v1/".concat(cohortId, "/users/me");\n              _context.next = 4;\n              return fetch(url, {\n                method: \'GET\',\n                headers: {\n                  authorization: \'2b8cc866-b1cb-4cb1-a139-86e0e04b8844\'\n                }\n              });\n            case 4:\n              response = _context.sent;\n              if (!response.ok) {\n                _context.next = 12;\n                break;\n              }\n              _context.next = 8;\n              return response.json();\n            case 8:\n              userData = _context.sent;\n              return _context.abrupt("return", userData);\n            case 12:\n              throw new Error(\'Failed to fetch user data\');\n            case 13:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function fetchUserData() {\n        return _fetchUserData.apply(this, arguments);\n      }\n      return fetchUserData;\n    }()\n  }, {\n    key: "setUserInfo",\n    value: function setUserInfo(_ref2) {\n      var name = _ref2.name,\n        about = _ref2.about;\n      this._nameElement.textContent = name;\n      this._aboutElement.textContent = about;\n    }\n  }, {\n    key: "setInitialUserInfo",\n    value: function setInitialUserInfo(_ref3) {\n      var name = _ref3.name,\n        about = _ref3.about;\n      this.setUserInfo({\n        name: name,\n        about: about\n      }); // Установите начальные данные пользователя\n    }\n  }, {\n    key: "updateProfileInfoOnServer",\n    value: function () {\n      var _updateProfileInfoOnServer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name, about) {\n        var cohortId, url, response, updatedUserData;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              cohortId = \'cohort-73\';\n              url = "https://mesto.nomoreparties.co/v1/".concat(cohortId, "/users/me");\n              _context2.next = 4;\n              return fetch(url, {\n                method: \'PATCH\',\n                headers: {\n                  authorization: \'2b8cc866-b1cb-4cb1-a139-86e0e04b8844\',\n                  \'Content-Type\': \'application/json\'\n                },\n                body: JSON.stringify({\n                  name: name,\n                  about: about\n                })\n              });\n            case 4:\n              response = _context2.sent;\n              if (!response.ok) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.next = 8;\n              return response.json();\n            case 8:\n              updatedUserData = _context2.sent;\n              return _context2.abrupt("return", updatedUserData);\n            case 12:\n              throw new Error(\'Failed to update profile\');\n            case 13:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function updateProfileInfoOnServer(_x, _x2) {\n        return _updateProfileInfoOnServer.apply(this, arguments);\n      }\n      return updateProfileInfoOnServer;\n    }()\n  }]);\n  return UserInfo;\n}();\n;// CONCATENATED MODULE: ./src/scripts/PopupSure.js\nfunction PopupSure_typeof(obj) { "@babel/helpers - typeof"; return PopupSure_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, PopupSure_typeof(obj); }\nfunction PopupSure_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction PopupSure_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, PopupSure_toPropertyKey(descriptor.key), descriptor); } }\nfunction PopupSure_createClass(Constructor, protoProps, staticProps) { if (protoProps) PopupSure_defineProperties(Constructor.prototype, protoProps); if (staticProps) PopupSure_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction PopupSure_toPropertyKey(arg) { var key = PopupSure_toPrimitive(arg, "string"); return PopupSure_typeof(key) === "symbol" ? key : String(key); }\nfunction PopupSure_toPrimitive(input, hint) { if (PopupSure_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (PopupSure_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction PopupSure_get() { if (typeof Reflect !== "undefined" && Reflect.get) { PopupSure_get = Reflect.get.bind(); } else { PopupSure_get = function _get(target, property, receiver) { var base = PopupSure_superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return PopupSure_get.apply(this, arguments); }\nfunction PopupSure_superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = PopupSure_getPrototypeOf(object); if (object === null) break; } return object; }\nfunction PopupSure_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) PopupSure_setPrototypeOf(subClass, superClass); }\nfunction PopupSure_setPrototypeOf(o, p) { PopupSure_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return PopupSure_setPrototypeOf(o, p); }\nfunction PopupSure_createSuper(Derived) { var hasNativeReflectConstruct = PopupSure_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = PopupSure_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = PopupSure_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return PopupSure_possibleConstructorReturn(this, result); }; }\nfunction PopupSure_possibleConstructorReturn(self, call) { if (call && (PopupSure_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return PopupSure_assertThisInitialized(self); }\nfunction PopupSure_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction PopupSure_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction PopupSure_getPrototypeOf(o) { PopupSure_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return PopupSure_getPrototypeOf(o); }\n\nvar PopupSure = /*#__PURE__*/function (_Popup) {\n  PopupSure_inherits(PopupSure, _Popup);\n  var _super = PopupSure_createSuper(PopupSure);\n  function PopupSure(popupSelector) {\n    var _this;\n    PopupSure_classCallCheck(this, PopupSure);\n    _this = _super.call(this, popupSelector);\n    _this._submitButton = _this._popup.querySelector(\'.popup__save-button\');\n    return _this;\n  }\n  PopupSure_createClass(PopupSure, [{\n    key: "setSubmitSure",\n    value: function setSubmitSure(submitSure) {\n      this._submitSure = submitSure;\n    }\n  }, {\n    key: "closeAndSubmit",\n    value: function closeAndSubmit() {\n      if (this._submitSure) {\n        this._submitSure();\n      }\n      this.close();\n    }\n  }, {\n    key: "setEventListeners",\n    value: function setEventListeners() {\n      var _this2 = this;\n      PopupSure_get(PopupSure_getPrototypeOf(PopupSure.prototype), "setEventListeners", this).call(this);\n      this._submitButton.addEventListener(\'click\', function () {\n        _this2.closeAndSubmit();\n        console.log(\'Клик "да" сработал\');\n      });\n    }\n  }]);\n  return PopupSure;\n}(Popup);\n\nfunction openPopupSure(submitSure) {\n  popupSure.setSubmitSure(submitSure);\n  popupSure.open();\n}\n;// CONCATENATED MODULE: ./src/scripts/Api.js\nfunction Api_typeof(obj) { "@babel/helpers - typeof"; return Api_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Api_typeof(obj); }\nfunction Api_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ Api_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == Api_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction Api_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction Api_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { Api_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { Api_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\nfunction Api_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Api_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Api_toPropertyKey(descriptor.key), descriptor); } }\nfunction Api_createClass(Constructor, protoProps, staticProps) { if (protoProps) Api_defineProperties(Constructor.prototype, protoProps); if (staticProps) Api_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Api_toPropertyKey(arg) { var key = Api_toPrimitive(arg, "string"); return Api_typeof(key) === "symbol" ? key : String(key); }\nfunction Api_toPrimitive(input, hint) { if (Api_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Api_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nvar Api = /*#__PURE__*/function () {\n  function Api(options) {\n    Api_classCallCheck(this, Api);\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  Api_createClass(Api, [{\n    key: "_handleResponse",\n    value: function _handleResponse(response) {\n      if (!response.ok) {\n        return Promise.reject("Error: ".concat(response.status));\n      }\n      return response.json();\n    }\n  }, {\n    key: "getInitialCards",\n    value: function getInitialCards() {\n      return fetch("".concat(this._baseUrl, "/cards"), {\n        headers: this._headers\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "getUserInfo",\n    value: function getUserInfo() {\n      return fetch("".concat(this._baseUrl, "/users/me"), {\n        headers: this._headers\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "updateUserInfo",\n    value: function updateUserInfo(data) {\n      return fetch("".concat(this._baseUrl, "/users/me"), {\n        method: \'PATCH\',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "addCard",\n    value: function addCard(data) {\n      var _this = this;\n      return fetch("".concat(this._baseUrl, "/cards"), {\n        method: \'POST\',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(function (res) {\n        return _this._handleResponse(res);\n      });\n    }\n  }, {\n    key: "deleteCard",\n    value: function deleteCard(cardId) {\n      return fetch("".concat(this._baseUrl, "/cards/").concat(cardId), {\n        method: \'DELETE\',\n        headers: this._headers\n      }).then(this._handleResponse);\n    }\n  }, {\n    key: "fetchUserData",\n    value: function () {\n      var _fetchUserData = Api_asyncToGenerator( /*#__PURE__*/Api_regeneratorRuntime().mark(function _callee() {\n        var userData;\n        return Api_regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.getUserInfo();\n            case 3:\n              userData = _context.sent;\n              return _context.abrupt("return", userData);\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context["catch"](0);\n              console.error(_context.t0);\n            case 10:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function fetchUserData() {\n        return _fetchUserData.apply(this, arguments);\n      }\n      return fetchUserData;\n    }()\n  }]);\n  return Api;\n}();\n/* harmony default export */ const scripts_Api = (Api);\n;// CONCATENATED MODULE: ./src/index.js\nfunction src_typeof(obj) { "@babel/helpers - typeof"; return src_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, src_typeof(obj); }\nfunction src_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ src_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == src_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction src_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction src_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { src_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { src_asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\nvar buttonForEdit = document.querySelector(\'.profile__edit-button\');\nvar buttonForAdd = document.querySelector(\'.profile__add-button\');\nvar popupEdit = new PopupWithForm(\'.popup_type_name\', formSubmitEditHandler);\nvar popupPlace = new PopupWithForm(\'.popup_type_place\', formSubmitPlaceHandler);\nvar imageZoomed = new PopupWithImage(\'.popup_type_image\');\nvar src_popupSure = new PopupSure(\'.popup_type_sure\');\nvar cardsGridContainer = document.querySelector(\'.element\');\nvar cardsTemplateSelector = \'#cards-template\';\nvar profileName = document.querySelector(\'.profile__name\');\nvar profileSubtitle = document.querySelector(\'.profile__subtitle\');\nvar inputName = document.querySelector(\'.popup__field_key_name\');\nvar inputSubtitle = document.querySelector(\'.popup__field_key_subtitle\');\nvar formProfileName = document.querySelector(\'.popup__form_type_name\');\nvar inputTitle = document.querySelector(\'.popup__field_key_title\');\nvar inputLink = document.querySelector(\'.popup__field_key_image\');\nvar formPlace = document.querySelector(\'.popup__form_type_place\');\nvar userId = null;\nvar userInfo = new UserInfo({\n  nameSelector: \'.profile__name\',\n  aboutSelector: \'.profile__subtitle\'\n});\nvar formValidatorConfig = {\n  formSelector: \'.popup__form\',\n  inputSelector: \'.popup__field\',\n  submitButtonSelector: \'.popup__save-button\',\n  inactiveButtonClass: \'popup__save-button_invalid\',\n  inputErrorClass: \'popup__field_invalid\',\n  errorClass: \'popup__message_invalid\'\n};\nvar formValidatorName = new FormValidator(formValidatorConfig, formProfileName);\nvar formValidatorPlace = new FormValidator(formValidatorConfig, formPlace);\nformValidatorName.enableValidation();\nformValidatorPlace.enableValidation();\nvar cardSection = new Section({\n  renderer: function renderer(cardData) {\n    var cardElement = generateCardElement(cardData, userId);\n    cardSection.addItem(cardElement, \'append\');\n  }\n}, \'.element\');\nvar api = new scripts_Api({\n  baseUrl: \'https://mesto.nomoreparties.co/v1/cohort-73\',\n  headers: {\n    authorization: \'2b8cc866-b1cb-4cb1-a139-86e0e04b8844\',\n    \'Content-Type\': \'application/json\'\n  }\n});\nfunction init() {\n  return _init.apply(this, arguments);\n}\nfunction _init() {\n  _init = src_asyncToGenerator( /*#__PURE__*/src_regeneratorRuntime().mark(function _callee() {\n    var _yield$Promise$all, _yield$Promise$all2, cardElements, userData, initialUserData;\n    return src_regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return Promise.all([api.getInitialCards(), api.getUserInfo()]);\n        case 3:\n          _yield$Promise$all = _context.sent;\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n          cardElements = _yield$Promise$all2[0];\n          userData = _yield$Promise$all2[1];\n          userId = userData._id;\n          initialUserData = userInfo.getUserInfo();\n          userInfo.setInitialUserInfo(initialUserData);\n          cardSection.renderItems(cardElements);\n          popupPlace.setSubmitCallback(function (formValues) {\n            formSubmitPlaceHandler(formValues);\n          });\n          _context.next = 17;\n          break;\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context["catch"](0);\n          console.error(_context.t0);\n        case 17:\n          buttonForEdit.addEventListener(\'click\', openPopupEdit);\n          buttonForAdd.addEventListener(\'click\', openPopupPlace);\n          popupEdit.setEventListeners();\n          popupPlace.setEventListeners();\n          imageZoomed.setEventListeners();\n          src_popupSure.setEventListeners();\n        case 23:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 14]]);\n  }));\n  return _init.apply(this, arguments);\n}\ninit();\nfunction deleteCard(_x) {\n  return _deleteCard.apply(this, arguments);\n}\nfunction _deleteCard() {\n  _deleteCard = src_asyncToGenerator( /*#__PURE__*/src_regeneratorRuntime().mark(function _callee2(cardInstance) {\n    return src_regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          try {\n            src_popupSure.open();\n            src_popupSure.setSubmitSure(function () {\n              api.deleteCard(cardInstance.getId()).then(function (res) {\n                cardInstance.deleteCard();\n              });\n            });\n          } catch (error) {\n            console.error(\'Ошибка при удалении карточки\', error);\n          }\n        case 1:\n        case "end":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _deleteCard.apply(this, arguments);\n}\nfunction generateCardElement(cardData, userId) {\n  var card = new Card(cardData, cardsTemplateSelector, function () {\n    imageZoomed.open(cardData.link, cardData.name);\n  }, deleteCard, userId, src_popupSure);\n  var cardElement = card.generateCard();\n  var buttonForDelete = cardElement.querySelector(\'.element__trash\');\n  return card.generateCard();\n}\nfunction openPopupEdit() {\n  popupEdit.open();\n  inputName.value = profileName.textContent;\n  inputSubtitle.value = profileSubtitle.textContent;\n}\nfunction closePopupEdit() {\n  popupEdit.close();\n}\nfunction formSubmitEditHandler(_x2) {\n  return _formSubmitEditHandler.apply(this, arguments);\n}\nfunction _formSubmitEditHandler() {\n  _formSubmitEditHandler = src_asyncToGenerator( /*#__PURE__*/src_regeneratorRuntime().mark(function _callee3(formValues) {\n    var name, about, updatedUserData;\n    return src_regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          name = formValues[\'name-input\'], about = formValues[\'name-subtitle\'];\n          _context3.prev = 1;\n          _context3.next = 4;\n          return api.updateUserInfo({\n            name: name,\n            about: about\n          });\n        case 4:\n          updatedUserData = _context3.sent;\n          userInfo.setUserInfo(updatedUserData);\n          closePopupEdit();\n          _context3.next = 12;\n          break;\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3["catch"](1);\n          console.error(_context3.t0);\n        case 12:\n        case "end":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 9]]);\n  }));\n  return _formSubmitEditHandler.apply(this, arguments);\n}\nfunction openPopupPlace() {\n  popupPlace.open();\n}\nfunction closePopupPlace() {\n  popupPlace.close();\n}\nfunction formSubmitPlaceHandler(_x3) {\n  return _formSubmitPlaceHandler.apply(this, arguments);\n} //async function removeCardFromDOM(cardId, api) {\n//  try {\n//    await api.deleteCard(cardId);\n//    const cardElement = document.querySelector(`[data-card-id="${cardId}"]`);\n//    if (cardElement) {\n//      cardElement.remove();\n//    }\n//  } catch (error) {\n//    console.error(\'Ошибка при удалении карточки\', error);\n//  }\n//}\nfunction _formSubmitPlaceHandler() {\n  _formSubmitPlaceHandler = src_asyncToGenerator( /*#__PURE__*/src_regeneratorRuntime().mark(function _callee4(formValues) {\n    var name, link, newCardData, cardElement;\n    return src_regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          name = formValues[\'place-edit\'], link = formValues[\'place-link\'];\n          _context4.prev = 1;\n          _context4.next = 4;\n          return api.addCard({\n            name: name,\n            link: link\n          });\n        case 4:\n          newCardData = _context4.sent;\n          cardElement = generateCardElement(newCardData, userId);\n          cardSection.addItem(cardElement, \'prepend\');\n          closePopupPlace();\n          formPlace.reset();\n          formValidatorPlace.toggleButtonState();\n          _context4.next = 15;\n          break;\n        case 12:\n          _context4.prev = 12;\n          _context4.t0 = _context4["catch"](1);\n          console.error(\'error in placehandler\', _context4.t0);\n        case 15:\n        case "end":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[1, 12]]);\n  }));\n  return _formSubmitPlaceHandler.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///235\n')}},__webpack_exports__={};__webpack_modules__[235]()})();